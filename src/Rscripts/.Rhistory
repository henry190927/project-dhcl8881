place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
arrange(desc(n))
setwd("~/Desktop/Projects/rlads2021Spring-Final/Rmds")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(showtext)
showtext_auto()
review_tfidf <- readRDS("../Rdata/reviews_tfidf.rds")
# calculate the tfidf for a specific place and ratings
tfidf_filter <- function (place, ratings) {
filtered <- review_tfidf %>%
filter(place == !!place, rating %in% !!ratings) %>%
group_by(word) %>%
select(word, tf_idf) %>%
summarize(tf_idf = sum(tf_idf)) %>%
arrange(desc(tf_idf)) %>%
ungroup() %>%
slice_max(tf_idf, n = 15)
return(filtered)
}
res <- tfidf_filter("ChIJldrqooqpQjQRl4bCVhVRvuI", c(4, 5))
res %>%
ggplot(aes(x = tf_idf, y = fct_reorder(word, tf_idf))) +
geom_col()
library(tidytext)
stopword <- read.delim("../stopword.txt")
reviews_df <- readRDS("../Rdata/reviews_jeiba.rds")
review_tidy <- reviews_df %>%
unnest_tokens(
output = "word",
input = "text",
token = "regex",
pattern = "\u3000"
)
review_without_stopword <- review_tidy %>%
filter(! word %in% stopword$X) %>%
count(rating, word) %>%
bind_tf_idf(word, rating, n) %>%
arrange(desc(n))
# plot by frequency
review_without_stopword %>%
group_by(rating) %>%
slice_max(n, n = 15) %>%
ungroup() %>%
ggplot(aes(n, fct_reorder(word, n, sum), fill = rating)) +
geom_col(show.legend = FALSE) +
labs(x = "Frequency", y = NULL)
place_df <- readRDS("../Rdata/places.rds")
place_df %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
arrange(desc(n))
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",") %>%
ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
geom_boxplot()
# USAGE:
#   input a word you want to analyze and will print out the positive/negative/total
#   comments, and the slice_max returns the most apparent performance of num places
reviews_with_name <- readRDS("../Rdata/review_jieba_with_name.rds")
words_filter <- function(word = '燈光', tag = 'pos', num = 25) {
filtered <- reviews_with_name %>%
filter(grepl(word, text)) %>%
group_by(name) %>%
summarise(pos = sum(rating %in% c(4,5)), neg = sum(rating %in% c(1,3)))
if (tag == 'pos') {
filtered <- filtered %>%
slice_max(pos, n = num)
} else if (tag == 'neg') {
filtered <- filtered %>%
slice_max(neg, n = num)
} else if (tag == 'total') {
filtered <- filtered %>%
slice_max(pos+neg, n = num)
}
return(filtered)
}
res <- words_filter(word = '衛生', tag = 'pos', num = 25)
# the y should be two tags, I will fix this when showing in the web page
res %>%
ggplot(aes(x = name, y = pos)) +
geom_col()
place_df <- readRDS("../Rdata/places.rds")
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
arrange(desc(n))
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",") %>%
ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
geom_boxplot()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
arrange(desc(n))
# place_df %>%
#   filter(!is.na(rating)) %>%
#   separate(types, c("first_type"), sep=",") %>%
#   ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
#   geom_boxplot()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
# place_df %>%
#   filter(!is.na(rating)) %>%
#   separate(types, c("first_type"), sep=",") %>%
#   ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
#   geom_boxplot()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",")
#   ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
#   geom_boxplot()
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",")
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",") %>% filter(name = "臺灣大學")
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",") %>% filter(name == "臺灣大學")
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, c("first_type"), sep=",") %>% filter(name == "臺灣大學")
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep=",") %>% filter(name == "臺灣大學")
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate(types, c("first_type"), sep=",") %>%
ggplot(aes(x=fct_reorder(as.factor(first_type), rating), y=rating)) +
geom_boxplot()
?separate_rows
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot()
x <-place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
x
x$types
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE)
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
place_df %>%
filter(!is.na(rating)) %>%
a
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_df$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot()
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_df$types)
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE)
x<-place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE)
x
x$types
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_df$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot()
View(place_types_rating)
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot()
View(place_types_rating)
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
coord_filp()
?coord_flip
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
coord_flip()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
labs(x = "Place type")
coord_flip()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
labs(x = "Place type") +
coord_flip()
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
labs(x = "Place Type") +
coord_flip()
x <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types)
x
View(place_types_rating)
# USAGE:
#   input a word you want to analyze and will print out the positive/negative/total
#   comments, and the slice_max returns the most apparent performance of num places
reviews_with_name <- readRDS("../Rdata/review_jieba_with_name.rds")
words_filter <- function(word = '燈光', tag = 'pos', num = 25) {
filtered <- reviews_with_name %>%
filter(grepl(word, text)) %>%
group_by(name) %>%
summarise(pos = sum(rating %in% c(4,5)), neg = sum(rating %in% c(1,3)))
if (tag == 'pos') {
filtered <- filtered %>%
slice_max(pos, n = num)
} else if (tag == 'neg') {
filtered <- filtered %>%
slice_max(neg, n = num)
} else if (tag == 'total') {
filtered <- filtered %>%
slice_max(pos+neg, n = num)
}
return(filtered)
}
res <- words_filter(word = '衛生', tag = 'pos', num = 25)
# the y should be two tags, I will fix this when showing in the web page
res %>%
ggplot(aes(x = name, y = pos)) +
geom_col() +
coord_flip()
View(place_types_rating)
setwd("~/Desktop/Projects/rlads2021Spring-Final/Rscripts")
review_jieba_with_name <- readRDS("~/Desktop/Projects/rlads2021Spring-Final/Rdata/review_jieba_with_name.rds")
View(review_jieba_with_name)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(showtext)
showtext_auto()
review_tfidf <- readRDS("../Rdata/reviews_tfidf.rds")
# calculate the tfidf for a specific place and ratings
tfidf_filter <- function (place, ratings) {
filtered <- review_tfidf %>%
filter(place == !!place, rating %in% !!ratings) %>%
group_by(word) %>%
select(word, tf_idf) %>%
summarize(tf_idf = sum(tf_idf)) %>%
arrange(desc(tf_idf)) %>%
ungroup() %>%
slice_max(tf_idf, n = 15)
return(filtered)
}
res <- tfidf_filter("ChIJldrqooqpQjQRl4bCVhVRvuI", c(4, 5))
res %>%
ggplot(aes(x = tf_idf, y = fct_reorder(word, tf_idf))) +
geom_col()
library(tidytext)
stopword <- read.delim("../stopword.txt")
reviews_df <- readRDS("../Rdata/reviews_jeiba.rds")
review_tidy <- reviews_df %>%
unnest_tokens(
output = "word",
input = "text",
token = "regex",
pattern = "\u3000"
)
review_without_stopword <- review_tidy %>%
filter(! word %in% stopword$X) %>%
count(rating, word) %>%
bind_tf_idf(word, rating, n) %>%
arrange(desc(n))
# plot by frequency
review_without_stopword %>%
group_by(rating) %>%
slice_max(n, n = 15) %>%
ungroup() %>%
ggplot(aes(n, fct_reorder(word, n, sum), fill = rating)) +
geom_col(show.legend = FALSE) +
labs(x = "Frequency", y = NULL)
place_df <- readRDS("../Rdata/places.rds")
# plot the rating distribution of every types of places
place_types_rating <- place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
group_by(types) %>%
summarize(n = n(),
avg = mean(rating),
std = sd(rating)) %>%
filter(n > 10) %>%
arrange(desc(n))
place_df %>%
filter(!is.na(rating)) %>%
separate_rows(types, sep = ",", convert = TRUE) %>%
filter(types %in% place_types_rating$types) %>%
ggplot(aes(x=fct_reorder(as.factor(types), rating), y=rating)) +
geom_boxplot() +
labs(x = "Place Type") +
coord_flip()
# USAGE:
#   input a word you want to analyze and will print out the positive/negative/total
#   comments, and the slice_max returns the most apparent performance of num places
reviews_with_name <- readRDS("../Rdata/review_jieba_with_name.rds")
words_filter <- function(word = '燈光', tag = 'pos', num = 25) {
filtered <- reviews_with_name %>%
filter(grepl(word, text)) %>%
group_by(name) %>%
summarise(pos = sum(rating %in% c(4,5)), neg = sum(rating %in% c(1,3)))
if (tag == 'pos') {
filtered <- filtered %>%
slice_max(pos, n = num)
} else if (tag == 'neg') {
filtered <- filtered %>%
slice_max(neg, n = num)
} else if (tag == 'total') {
filtered <- filtered %>%
slice_max(pos+neg, n = num)
}
return(filtered)
}
res <- words_filter(word = '衛生', tag = 'pos', num = 25)
# the y should be two tags, I will fix this when showing in the web page
res %>%
ggplot(aes(x = name, y = pos)) +
geom_col() +
coord_flip()
agrep
